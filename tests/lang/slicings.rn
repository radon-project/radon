# Slicing

# Array of Numbers slicing
var my_arr = [1,2,3,4,5,6,7,8,9,0]
assert my_arr[0] == 1
assert my_arr[0:5] == [1,2,3,4,5]
assert my_arr[0:9:2] == [1,3,5,7,9]
assert my_arr[::-1] == [0,9,8,7,6,5,4,3,2,1]
# assert my_arr[0:9:-1] == [] # Invalid Syntax: Expected EOF

# Array of Strings slicing
const my_str_arr = ["This", "is", "an", "example", "string"]
assert my_str_arr[0] == "This"
assert my_str_arr[0:3] == ["This", "is", "an"]
assert my_str_arr[0:5:2] == ["This", "an", "string"]
assert my_str_arr[::-1] == ["string", "example", "an", "is", "This"]

# Complex Array slicing
const my_complex_arr = [1, "This", 2, "is", 3, "an", 4, "example", 5, "string", 4.64, 2.4556, 324.2345]
assert my_complex_arr[0] == 1
assert my_complex_arr[11] == 2.4556
assert my_complex_arr[-2] == 2.4556
assert my_complex_arr[0:9:1] == [1, "This", 2, "is", 3, "an", 4, "example", 5]
assert my_complex_arr[0:10:2] == [1, 2, 3, 4, 5]
assert my_complex_arr[::-1] == [324.2345, 2.4556, 4.64, "string", 5, "example", 4, "an", 3, "is", 2, "This", 1]

# String slicing
var my_str = "This is an example string"

assert my_str[0:4:1] == "This"
assert my_str[5:7] == "is"
assert my_str[9] == "n"
assert my_str[11:18] == "example"
assert my_str[::-1] == "gnirts elpmaxe na si sihT"

# Straight forward slicing
assert "string"[0:3] == "str"
assert [1,2,3,4,5,6,7,8,9,0][0:5] == [1,2,3,4,5]
assert "radon"[::-1] == "nodar"

# updating values in array
my_arr = [1,2,3,4,5,6,7,8,9,0]
my_arr[0] = 10
assert my_arr[0] == 10

# updating values in string
my_str = "This is an example string"
const new_str = my_str[19] = "S"
assert new_str == "This is an example String"
