class String {
    # The constructor method
    fun __constructor__(value) {
        this.value = str(value)
        
        # Builtin attributes
        this.ascii_uppercase = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
        this.ascii_lowercase = "abcdefghijklmnopqrstuvwxyz"
        this.ascii_letters = this.ascii_uppercase + this.ascii_lowercase
        this.digits = "0123456789"
        this.hexdigits = "0123456789abcdefABCDEF"
        this.octdigits = "01234567"
        this.punctuation = "!#$%&'()*+,-./:;<=>?@[\]^_`{|}~"
        this.whitespace = " "
        this.tab = "    "
    }

    # TODO: Need to fix
    fun join(separator = " ") {
        var result = ""

        for i = 0 to str_len(this.value) {
            result += str_get(this.value)
            if i < str_len(this.value) - 1 {
                result += separator
            }
        }
        return result
    }

    # Find a character in a string and return its index
    fun find(data) {
        var result = 0

        for i = 0 to str_len(this.value) {
            if this.value == data {
                return i
            }
        }
        return -1
    }

    # Magic method to convert string to int if possible
    fun to_int() {
        if is_num(this.value) == true {
            return int(this.value)
        } else {
            return false
        }
    }

    # Return the length of the string
    fun len() -> str_len(this.value)
    fun to_string() -> this.value
}
